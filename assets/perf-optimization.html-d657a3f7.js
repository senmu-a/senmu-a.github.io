import{_ as e,p as a,q as i,Y as d}from"./framework-aa5c4115.js";const r={},l=d('<h2 id="一、性能优化入门" tabindex="-1"><a class="header-anchor" href="#一、性能优化入门" aria-hidden="true">#</a> 一、性能优化入门</h2><ol><li>解决 <code>main.js</code> 打包出来体积太大的问题 <ol><li>打开 <code>webpack-bundle-analyzer</code> 包分析工具</li><li>移除公共库（<code>react</code>、<code>react-dom</code>、<code>react-router-dom</code>），这步的前提是公司如果有自己稳定的 cdn 就可以，然后使用强缓存</li><li>如果第二步无法满足还可以进行 <code>splitchunks</code> 分包，下面是参考的分包，如果使用的是 http1.1 那么最好是抽离成 5 个 js 资源最好了（因为浏览器对于 http1.1 且开启 keep-alive 的情况下最多并发请求 5 个资源），如果是 http2 的话就无所谓了 <ol><li>runtime inline 到 html 中，减少请求</li><li>react libs 抽离出来</li><li>router 相关的库抽离出来</li><li>UI 组件库抽离出来</li><li>web3 相关的库抽离出来</li><li>业务公用的代码抽离出来</li><li>main.js</li></ol></li><li>如果为了极致的秒开的话可以将 main.js 等资源通过离线缓存起来 <ol><li>service box</li><li>localstorage - 将生成的 manifest 映射存储到 localstorage 中，然后内部写一个启动逻辑来判断是否可以使用离线缓存</li></ol></li><li>增加 <code>pre</code> 预加载 <ol><li>可以固定将关键的 react libs、router 预加载</li><li>也可以使用 <code>quick-link</code> + <code>guess.js</code> 方案更灵活的预加载</li></ol></li></ol></li><li>明白 <code>async</code>、<code>defer</code> 等请求资源的方式</li></ol><h2 id="二、性能优化进阶" tabindex="-1"><a class="header-anchor" href="#二、性能优化进阶" aria-hidden="true">#</a> 二、性能优化进阶</h2><h3 id="_2-1-页面渲染流程" tabindex="-1"><a class="header-anchor" href="#_2-1-页面渲染流程" aria-hidden="true">#</a> 2.1 页面渲染流程</h3><p>css 加载会阻塞 html 的渲染也会阻塞后面 js 语句的执行</p><h3 id="_2-2-重排重绘" tabindex="-1"><a class="header-anchor" href="#_2-2-重排重绘" aria-hidden="true">#</a> 2.2 重排重绘</h3><h3 id="_2-3-使用-gpu-进行加速" tabindex="-1"><a class="header-anchor" href="#_2-3-使用-gpu-进行加速" aria-hidden="true">#</a> 2.3 使用 gpu 进行加速</h3><h2 id="三、性能优化深水区" tabindex="-1"><a class="header-anchor" href="#三、性能优化深水区" aria-hidden="true">#</a> 三、性能优化深水区</h2><h3 id="_3-1-监控指标" tabindex="-1"><a class="header-anchor" href="#_3-1-监控指标" aria-hidden="true">#</a> 3.1 监控指标</h3><h3 id="_3-2-监控-sdk" tabindex="-1"><a class="header-anchor" href="#_3-2-监控-sdk" aria-hidden="true">#</a> 3.2 监控 SDK</h3><h3 id="_3-2-日志上报" tabindex="-1"><a class="header-anchor" href="#_3-2-日志上报" aria-hidden="true">#</a> 3.2 日志上报</h3><h3 id="_3-3-日志清洗、日志存储" tabindex="-1"><a class="header-anchor" href="#_3-3-日志清洗、日志存储" aria-hidden="true">#</a> 3.3 日志清洗、日志存储</h3><h3 id="_3-4-监控平台展示日志" tabindex="-1"><a class="header-anchor" href="#_3-4-监控平台展示日志" aria-hidden="true">#</a> 3.4 监控平台展示日志</h3><p>...</p>',14),h=[l];function c(o,t){return a(),i("div",null,h)}const s=e(r,[["render",c],["__file","perf-optimization.html.vue"]]);export{s as default};
